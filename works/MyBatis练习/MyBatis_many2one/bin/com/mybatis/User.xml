<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.Mapper">

<!--执行增加操作的SQL语句。id和parameterType  
       分别与IUserOperation接口中的addUser方法的名字和  
       参数类型一致。以#{name}的形式引用Student参数  
       的name属性，MyBatis将使用反射读取Student参数  
       的此属性。#{name}中name大小写敏感。引用其他  
       的gender等属性与此一致。useGeneratedKeys设置  
       为"true"表明要MyBatis获取由数据库自动生成的主  
       键；keyProperty="id"指定把获取到的主键值注入  
       到User的id属性--> 
 <insert id="addUser" parameterType="User" 
        useGeneratedKeys="true" keyProperty="id"> 
        insert into t_user(name,groupid)  
             values(#{name},#{group.id})  
 </insert>

<resultMap type="Group" id="resultListGroup">
        <id column="gid" property="id" />
        <result column="gname" property="name" />
    </resultMap>

    <!-- User 联合文章进行查询 方法的配置 (多对一的方式) -->    
    <resultMap id="resultUserList" type="User">
        <id property="id" column="uid" />
        <result property="name" column="uname" />
        <association property="group" javaType="Group" resultMap="resultListGroup" />            
    </resultMap>
    
    <select id="getUserGroup" parameterType="int" resultMap="resultUserList">
       select t_user.id uid,t_user.name uname,t_user.groupid,t_group.id gid,t_group.name gname from t_user,t_group
              where t_user.groupid=t_group.id and t_group.id=#{id}
    </select>



</mapper>