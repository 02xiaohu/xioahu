<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<!--
  - Application context definition for PetClinic on TopLink.
  -
  - A full "toplink.jar" and "xmlparserv2.jar" from the TopLink 10.1.3
  - distribution needs to be added to the "WEB-INF/lib" directory
  - (or to "lib/toplink" before building the "petclinic.war" file).
  -->
<beans>

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->
  
	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition below) -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/jdbc.properties"/>
	</bean>

	<!-- Local DataSource that works in any environment -->
	<!-- Note that DriverManagerDataSource does not pool; it is not intended for production -->
	<!-- See JPetStore for an example of using Commons DBCP BasicDataSource as alternative -->
	<!-- See Image Database for an example of using C3P0 ComboPooledDataSource as alternative -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>

	<!-- JNDI DataSource for J2EE environments -->
	<!--
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/petclinic"/>
	</bean>
	-->

	<!-- TopLink 10.1.3 SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.toplink.LocalSessionFactoryBean">
		<property name="configLocation" value="toplink-sessions.xml"/>
		<property name="dataSource" ref="dataSource"/>
		<property name="sessionLog">
			<bean class="org.springframework.orm.toplink.support.CommonsLoggingSessionLog"/>
		</property>
	</bean>

	<!-- Transaction manager for a single TopLink SessionFactory (alternative to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.toplink.TopLinkTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

	<!--
	  - PetClinic's central data access object: TopLink implementation.
    -->
	<bean id="clinicTarget" class="org.springframework.samples.petclinic.toplink.TopLinkClinic">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<!--
		- Transactional proxy for PetClinic's central data access object.
		-
		- Defines specific transaction attributes with "readOnly" markers,
		- which is an optimization that is particularly valuable with Hibernate
		- (to suppress unnecessary flush attempts for read-only operations).
		-
		- Note that in a real-life app with multiple transaction proxies,
		- you will probably want to use parent and child bean definitions
		- as described in the manual, to reduce duplication.
    -->
	<bean id="clinic" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target" ref="clinicTarget"/>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="store*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

</beans>
